package com.shine.controller;

import com.core.jfinal.ext.kit.JsonKit;
import com.shine.model.DataConnection;
import com.shine.service.DataConnectionService;
import com.shine.service.impl.DataConnectionServiceImpl;
import com.system.controller.base.UrlPermissController;

/**
 * Generated by Blade. 2017-08-16 09:50:09
 */
public class DataConnectionController extends UrlPermissController {
	private static String CODE = "dataConnection";
	private static String PERFIX = "data_connection";
	private static String LIST_SOURCE = "DataConnection.list";
	private static String BASE_PATH = "/platform/dataConnection/";

	DataConnectionService service = new DataConnectionServiceImpl();

	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "dataConnection.html");
	}

	public void add() {
		setAttr("code", CODE);
		render(BASE_PATH + "dataConnection_add.html");
	}

	public void edit() {
		String id = getPara(0);
		DataConnection dataConnection = service.findById(id);
		setAttr("model", JsonKit.toJson(dataConnection));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "dataConnection_edit.html");
	}

	public void view() {
		String id = getPara(0);
		DataConnection dataConnection = service.findById(id);
		setAttr("model", JsonKit.toJson(dataConnection));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "dataConnection_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		DataConnection dataConnection = mapping(PERFIX, DataConnection.class);
		boolean temp = service.save(dataConnection);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		DataConnection dataConnection = mapping(PERFIX, DataConnection.class);

		boolean temp = service.update(dataConnection);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}
}
