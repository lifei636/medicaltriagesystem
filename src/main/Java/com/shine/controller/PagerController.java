package com.shine.controller;

import java.util.Date;
import java.util.List;

import com.core.jfinal.ext.kit.JsonKit;
import com.core.toolbox.Record;
import com.core.toolbox.kit.ShardKit;
import com.shine.model.Pager;
import com.shine.service.PagerService;
import com.shine.service.impl.PagerServiceImpl;
import com.system.controller.base.UrlPermissController;

/**
 * Generated by Blade. 2017-08-03 10:50:24
 */
public class PagerController extends UrlPermissController {
	private static String CODE = "pager";
	private static String PERFIX = "pager";
	private static String LIST_SOURCE = "Pager.list";
	private static String BASE_PATH = "/platform/pager/";

	PagerService service = new PagerServiceImpl();
	ShardKit shardkit = new ShardKit();

	public void index() {
		setAttr("code", CODE);
		render(BASE_PATH + "pager.html");
	}

	public void add() {
		List<Record> list_triageName = service.queryTriageName();
		setAttr("list_triageName", list_triageName);
		setAttr("code", CODE);
		render(BASE_PATH + "pager_add.html");
	}

	public void edit() {
		List<Record> list_triageName = service.queryTriageName();
		setAttr("list_triageName", list_triageName);
		String id = getPara(0);
		Pager pager = service.findById(id);
		setAttr("model", JsonKit.toJson(pager));
		setAttr("id", id);
		setAttr("triage_id", pager.getTriage_id());
		setAttr("code", CODE);
		render(BASE_PATH + "pager_edit.html");
	}

	public void view() {
		String id = getPara(0);
		Pager pager = service.findById(id);
		setAttr("model", JsonKit.toJson(pager));
		setAttr("id", id);
		setAttr("code", CODE);
		render(BASE_PATH + "pager_view.html");
	}

	public void list() {
		Object grid = paginate(LIST_SOURCE);
		renderJson(grid);
	}

	public void save() {
		Pager pager = mapping(PERFIX, Pager.class);
		Pager pager_name = service.findByName(pager.getName());
		if (null != pager_name && pager_name.getId() != null) {
			renderJson(error(PAGER_NAME_MSG));
			return;
		}
		Pager pager_ip = service.findByIP(pager.getIp());
		if (null != pager_ip && pager_ip.getId() != null) {
			renderJson(error(TRIAGE_IP_MSG));
			return;
		} else if (shardkit.isIP(pager.getIp()) == false) {
			renderJson(error(TRIAGE_IP_ERROR_MSG));
			return;
		}
		pager.setType(0);
		pager.setLogin_time(new Date());
		pager.setState(0);
		boolean temp = service.save(pager);
		if (temp) {
			renderJson(success(SAVE_SUCCESS_MSG));
		} else {
			renderJson(error(SAVE_FAIL_MSG));
		}
	}

	public void update() {
		Pager pager = mapping(PERFIX, Pager.class);

		boolean temp = service.update(pager);
		if (temp) {
			renderJson(success(UPDATE_SUCCESS_MSG));
		} else {
			renderJson(error(UPDATE_FAIL_MSG));
		}
	}

	public void remove() {
		String ids = getPara("ids");
		int cnt = service.deleteByIds(ids);
		if (cnt > 0) {
			renderJson(success(DEL_SUCCESS_MSG));
		} else {
			renderJson(error(DEL_FAIL_MSG));
		}
	}

	public void pagerqueuetype() {
		setAttr("code", CODE);
		setAttr("aid", getPara(0));
		System.out.println(getAttr("aid") + "***************");
		render(BASE_PATH + "pager_pagerqueuetype.html");
	}

	public void pagerterminal() {
		setAttr("code", CODE);
		setAttr("aid", getPara(0));
		System.out.println(getAttr("aid") + "************");
		render(BASE_PATH + "pager_pagerterminal.html");
	}
	public int loginoutall()
	{
		return service.loginoutall();
	}
}
